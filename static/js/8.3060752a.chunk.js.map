{"version":3,"sources":["components/MovieReviews/MovieReviews.jsx"],"names":["MovieReviews","movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","api","fetchMovieReviews","then","length","map","id","author","content"],"mappings":"iOAsCeA,EAjCM,WAAO,IAClBC,EAAYC,cAAZD,QADiB,EAEeE,mBAAS,MAFxB,mBAElBC,EAFkB,KAEJC,EAFI,KAWzB,OAPAC,qBAAU,WAENC,IAAIC,kBAAkBP,GAASQ,KAAKJ,KAGrC,CAACJ,IAGF,mCACGG,GAAgBA,EAAaM,OAAS,EACrC,6BACGN,EAAaO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,+BACE,6BAAKD,IACL,4BAAIC,MAFGF,QAOb","file":"static/js/8.3060752a.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../service/api';\r\n\r\nconst MovieReviews = () => {\r\n  const { movieId } = useParams();\r\n  const [movieReviews, setMovieReviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const renderMovieReviews = () => {\r\n      api.fetchMovieReviews(movieId).then(setMovieReviews);\r\n    };\r\n    renderMovieReviews();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {movieReviews && movieReviews.length > 0 ? (\r\n        <ul>\r\n          {movieReviews.map(({ id, author, content }) => (\r\n            <li key={id}>\r\n              <h2>{author}</h2>\r\n              <p>{content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>We don`t have any rewiews for this movie</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nMovieReviews.propTypes = {\r\n  movieReviews: PropTypes.array,\r\n};\r\n\r\nexport default MovieReviews;\r\n"],"sourceRoot":""}
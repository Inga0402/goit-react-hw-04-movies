{"version":3,"sources":["service/api.js","components/MovieInfo/MovieInfo.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/MovieInfo/default.jpg","components/MovieInfo/MovieInfo.jsx"],"names":["movie_id","a","config","url","axios","data","Error","cast","results","query","params","length","toast","warn","defaults","baseURL","api_key","language","api","fetchPopularMovies","fetchMovieInfo","fetchMoviesCast","fetchMovieReviews","fetchMoviesByQuery","module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","Cast","lazy","Reviews","MovieInfoPage","movieId","useParams","useRouteMatch","path","history","useHistory","useState","movie","setMovie","isCastVisible","setIsCastVisible","isReviewsVisible","setIsReviewsVisible","location","useLocation","useEffect","then","searchString","pathname","split","onClick","state","from","className","s","btn","wrapper","poster_path","src","alt","title","poster","defaultImage","movie_title","release_date","vote_average","overview","genres","map","genre","name","join","to","reviews","fallback"],"mappings":"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","file":"static/js/5.bafdcf0c.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'f2c48f8e3f2e8ceb9b5f5ca977db990f';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: 'en-US',\r\n};\r\n\r\nconst fetchPopularMovies = async () => {\r\n  try {\r\n    const config = {\r\n      url: `trending/movie/week`,\r\n    };\r\n    const { data } = await axios(config);\r\n    return data.results;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n};\r\n\r\nasync function fetchMovieInfo(movie_id) {\r\n  try {\r\n    const config = { url: `movie/${movie_id}` };\r\n    const { data } = await axios(config, movie_id);\r\n    return data;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n}\r\n\r\nasync function fetchMoviesCast(movie_id) {\r\n  try {\r\n    const config = { url: `movie/${movie_id}/credits` };\r\n    const { data } = await axios(config, movie_id);\r\n    return data.cast;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n}\r\n\r\nasync function fetchMovieReviews(movie_id) {\r\n  try {\r\n    const config = { url: `movie/${movie_id}/reviews` };\r\n    const { data } = await axios(config, movie_id);\r\n    return data.results;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n}\r\n\r\nasync function fetchMoviesByQuery(query) {\r\n  try {\r\n    const config = { url: `search/movie`, params: { query } };\r\n    const { data } = await axios(config);\r\n    if (data.results.length === 0) {\r\n      toast.warn('No results were found for your search.');\r\n      return;\r\n    }\r\n    return data.results;\r\n  } catch (error) {\r\n    new Error('No response from server');\r\n  }\r\n}\r\n\r\nconst api = {\r\n  fetchPopularMovies,\r\n  fetchMovieInfo,\r\n  fetchMoviesCast,\r\n  fetchMovieReviews,\r\n  fetchMoviesByQuery,\r\n};\r\n\r\nexport default api;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"MovieInfo_btn__cuMle\",\"wrapper\":\"MovieInfo_wrapper__19a0I\",\"poster\":\"MovieInfo_poster__3nHaq\",\"movie_title\":\"MovieInfo_movie_title__s2GY2\",\"cast\":\"MovieInfo_cast__1br1Q\",\"reviews\":\"MovieInfo_reviews__1dVFi\",\"fallback\":\"MovieInfo_fallback__2Qmzg\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import { useState, useEffect, lazy, Suspense } from 'react';\r\nimport {\r\n  useParams,\r\n  Route,\r\n  NavLink,\r\n  useRouteMatch,\r\n  useHistory,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../service/api';\r\nimport s from './MovieInfo.module.css';\r\nimport defaultImage from './default.jpg';\r\n\r\nconst Cast = lazy(() => import('../Cast'));\r\nconst Reviews = lazy(() => import('../MovieReviews'));\r\n\r\nconst MovieInfoPage = () => {\r\n  const srcBaseUrl = 'https://image.tmdb.org/t/p/w500';\r\n  const { movieId } = useParams();\r\n  const { url, path } = useRouteMatch();\r\n  const history = useHistory();\r\n  const [movie, setMovie] = useState(null);\r\n  const [isCastVisible, setIsCastVisible] = useState(false);\r\n  const [isReviewsVisible, setIsReviewsVisible] = useState(false);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const renderMovieInfo = () => {\r\n      api.fetchMovieInfo(movieId).then(setMovie);\r\n    };\r\n    renderMovieInfo();\r\n  }, [movieId]);\r\n\r\n  const searchString = location.pathname.split('/')[3];\r\n\r\n  const makeCastVisible = () => {\r\n    if (isReviewsVisible === true) {\r\n      setIsReviewsVisible(false);\r\n    }\r\n    setIsCastVisible(true);\r\n  };\r\n  const makeReviewsVisible = () => {\r\n    if (isCastVisible === true) {\r\n      setIsCastVisible(false);\r\n    }\r\n    setIsReviewsVisible(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchString === 'reviews') {\r\n      setIsReviewsVisible(true);\r\n    } else if (searchString === 'cast') {\r\n      setIsCastVisible(true);\r\n    }\r\n  }, [searchString]);\r\n\r\n  function comeBack() {\r\n    history.push(location?.state?.from || history.push('/'));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button onClick={comeBack} className={s.btn}>\r\n        Come back\r\n      </button>\r\n      {movie && (\r\n        <div className={s.wrapper}>\r\n          {movie.poster_path ? (\r\n            <img\r\n              src={`${srcBaseUrl}${movie.poster_path}`}\r\n              alt={movie.title}\r\n              className={s.poster}\r\n            />\r\n          ) : (\r\n            <img src={defaultImage} alt=\"Was not found\" className={s.poster} />\r\n          )}\r\n          <div>\r\n            <h3 className={s.movie_title}>\r\n              {movie.title}({movie.release_date.split('-')[0]})\r\n            </h3>\r\n            <span>User score: {movie.vote_average * 10}%</span>\r\n            <h3>Overview</h3>\r\n            <span>{movie.overview}</span>\r\n            {<h3>Genres</h3>}\r\n            {<span>{movie.genres.map(genre => genre.name).join(' ')}</span>}\r\n            <h3>Additional information</h3>\r\n            <ul className={s.wrapper}>\r\n              <li>\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `${url}/cast`,\r\n                    state: { ...location.state },\r\n                  }}\r\n                  onClick={makeCastVisible}\r\n                  className={s.cast}\r\n                >\r\n                  Cast\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  to={{\r\n                    pathname: `${url}/reviews`,\r\n                    state: { ...location.state },\r\n                  }}\r\n                  onClick={makeReviewsVisible}\r\n                  className={s.reviews}\r\n                >\r\n                  Reviews\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n            <Suspense fallback={<h2 className={s.fallback}>Loading...</h2>}>\r\n              <Route path={`${path}/:cast`}>\r\n                {movie && isCastVisible && <Cast />}\r\n              </Route>\r\n              <Route path={`${path}/:reviews`}>\r\n                {movie && isReviewsVisible && <Reviews />}\r\n              </Route>\r\n            </Suspense>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nMovieInfoPage.propTypes = {\r\n  movie: PropTypes.object,\r\n  isCastVisible: PropTypes.bool,\r\n  isReviewsVisible: PropTypes.bool,\r\n};\r\nexport default MovieInfoPage;\r\n"],"sourceRoot":""}